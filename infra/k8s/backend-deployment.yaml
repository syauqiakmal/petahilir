# kubectl -n peta-hilirisasi apply -f deployment.yaml
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: landing-page
#   labels:
#     app: landing-page
# spec:
#   # comment if using HPA
#   replicas: 1

#   # !IMPORTANT! labels selector for Service
#   selector:
#     matchLabels:
#       app: landing-page

#   # Define how we update version of app
#   # strategy:
#   #   type: RollingUpdate
#   #   rollingUpdate:
#   #     maxSurge: 1
#   #     maxUnavailable: 1

#   # affinity:
#   #   nodeAffinity:
#   #     # required, hard requirement during scheduling
#   #     requiredDuringSchedulingIgnoredDuringExecution:
#   #       nodeSelectorTerms:
#   #       - matchExpressions:
#   #         - key: operation
#   #           operator: In
#   #           values:
#   #           - onxp-alt-pool
#   #     # soft requirement during scheduling
#   #     prefferedDuringSchedulingIgnoredDuringExecution:
#   #       - weight: 1 # the higher, the more preferred
#   #         preference:
#   #           matchExpressions:
#   #           - key: operation
#   #             operator: In
#   #             values:
#   #             - onxp-alt-pool

#   #   podAffinity:
#   #     requiredDuringSchedulingIgnoredDuringExecution:
#   #     # pod with label confidential=high should be schedule on node with label security-zone
#   #     - labelSelector:
#   #         matchLabels:
#   #           confidential: high # pod should have label confidential: high
#   #       topologyKey: security-zone # node should have label security-zone
    
#   #   podAntiAffinity:
#   #     preferredDuringSchedulingIgnoredDuringExecution:
#   #     # Pod should not (but could) be placed on any node where a Pod with the label confidential=none is running.
#   #     - weight: 100
#   #       podAffinityTerm:
#   #         labelSelector:
#   #           matchLabels:
#   #             confidential: none
#   #         topologyKey: kubernetes.io/hostname

#   # using taint & toleration
#   # tolerations: 
#     # prevent pod from being scheduled on master node
#     # - key: "node-role.kubernetes.io/master"
#     #   operation: "Exists"
#     #   effect: "NoSchedule"

#     # ```
#     # apiVersion: v1
#     # kind: Node
#     # metadata:
#     #   name: control-plane-node
#     # spec:
#     #   taints:
#     #   - effect: NoSchedule
#     #     key: node-role.kubernetes.io/control-plane
#     #     value: "true"
#     # ```
#     # - key: "node-role.kubernetes.io/control-plane"
#     #   operation: "Exists"
#     #   effect: "NoSchedule"

#     # - key: "node.kubernetes.io/unreachable"
#     #   effect: "NoExecute"
#     #   operator: "Exists"
#     # - key: "node.kubernetes.io/not-ready"
#     #   effect: "NoExecute"
#     #   operator: "Exists"

      
#   template:
#     metadata:
#       labels:
#         app: landing-page
#     spec:
#       imagePullSecrets:
#         - name: docker-secret
#       # initContainers:
#       #   - name: init-curl
#       #     image: curlimages/curl
#       #     imagePullPolicy: Always 
#       #     command:
#       #     - curl
#       #     - -v
#       #     - https://onxp.net
      
#       # set service account. By default k8s will assign `default` sa to every pods
#       # secret will be mounted on /var/run/secrets/kubernetes.io/serviceaccount
#       # serviceAccountName: onxp-exercise-sa

#       # define where to deploy
#       # nodeSelector:
#           # operation: onxp-alt-pool

#       containers:
#         - name: landing-page
#           image: edosyhtptra/landing-page-petahilir:v0.1.1
#           imagePullPolicy: Always # or IfNotPresent

#           # resources profile
#           # Types of Quality of Service (QoS):
#           # - Guaranteed: highest priority, guaranteed not to be killed. Set equal amount of resource requests and limits
#           # - Burstable: killed when resource is on upper limit. Set different resource requests and limits
#           # - BestEffort: lowest priority, killed first. do not have any resource requests or limits.
#           # resources:
#           #   requests:
#           #     memory: 100Mi
#           #     cpu: 100m
#           #     # ephemeral-storage: 2Gi # request for pod's storage
#           #     # hugepages-2Mi: 100Mi # hugepage enable k8s to manage memory in large chuks

#           #   limits:
#           #     memory: 100Mi
#           #     cpu: 100m  
          
#           # env
#           env:
#           - name: APP_URL
#             value: https://petahilirisasi.id
#           - name: APP_KEY
#             value: randomlongstring
#           # - name: MY_APP_NAME
#           #   valueFrom:
#           #     configMapKeyRef:
#           #       name: exercise-app-cm
#           #       key: APP_NAME
#           # - name: MY_DB_USERNAME
#           #   valueFrom:
#           #     secretKeyRef:
#           #       name: exercise-app-secret
#           #       key: DB_USERNAME
          
#           # health-check

#           # readinessProbe: check if container is ready to serve traffic
#           # biasanya endpoint yang digunakan adalah /health
#           # { "success": "ok"}
#           readinessProbe:
#             httpGet:
#               path: /
#               port: 3001
#             successThreshold: 1
#             failureThreshold: 3
#             initialDelaySeconds: 5
#             periodSeconds: 30
#             timeoutSeconds: 1
#           # check if container is alive
#           livenessProbe:
#             httpGet:
#               path: /
#               port: 3002
#             successThreshold: 1
#             failureThreshold: 3
#             initialDelaySeconds: 10
#             periodSeconds: 30
#             timeoutSeconds: 1
          
#           # Check container is already started. Ideal to start app with long startup time. 
#           # executed before readinessProbe
#           # startupProbe:
#           #   exec:
#           #   command: [ "curl", "https://onxp.net" ]
#           #   initialDelaySeconds: 60
#           #   periodSeconds: 60
#           #   failureThreshold: 15
            
#           # envFrom:
#           #   - configMapRef:
#           #       name: exercise-app-cm
#           #   - secretRef:
#           #       name: exercise-app-secret

#           # volumeMounts:
#           # - name: app-config-volume
#           #   mountPath: /etc/app/app.conf
#           #   subPath: app.conf
#           # - name: emptydir-volume-exercise
#           #   mountPath: /data/emptydir
#           # using storage with hostpath
#           # - name: hostpath-volume-exercise
#           #   mountPath: /data/hostpath
#           # using storage with NFS
#           # - name: nfs-volume-exercise
#           #   mountPath: /opt/data/exercise

#           # container lifecycle
#           # execute right after container is created
#           # lifecycle:
#           #   postStart:
#           #     exec:
#           #     command:
#           #     - sh
#           #     - -c
#           #     - sleep 15 && echo "Hello onxp!" > /tmp/postStart_done
#           # execute right before container is terminated
#           #   preStop:
#           #     preStop:
#           #       httpGet:
#           #       path: /stopped
#           #       port: 80

#       restartPolicy: Always
#       # imagePullSecrets:
#       #   - name: docker-secret
        
#       # volumes:
#       # - name: emptydir-volume-exercise
#       #   emptyDir: {}
      
#       # - name: app-config-volume
#       #   configMap:
#       #     name: app-config

#       # # using storage with hostpath
#       # - name: hostpath-volume-exercise
#       #   persistentVolumeClaim:
#       #     claimName: hostpath-exercise-pvc


#       # using storage with NFS
#       # - name: nfs-volume-exercise
#       #   persistentVolumeClaim:
#       #     claimName: nfs-pvc-exercise

apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
  namespace: peta-hilirisasi # Ensure this is the correct namespace
  labels:
    app: fastapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi
      tier: backend
  template:
    metadata:
      labels:
        app: fastapi
        tier: backend
    spec:
      imagePullSecrets:
        - name: regcred # Reference your secret here
      containers:
        - name: fastapi
          image: edosyhtptra/petahilirisasi-backend:v0.0.2
          imagePullPolicy: Always
          # env:
          # - name: APP_URL
          #   value: https://petahilirisasi.id
          # - name: APP_KEY
          #   value: randomlongstring
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 3001
          #   successThreshold: 1
          #   failureThreshold: 3
          #   initialDelaySeconds: 5
          #   periodSeconds: 30
          #   timeoutSeconds: 1
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 3002
          #   successThreshold: 1
          #   failureThreshold: 3
          #   initialDelaySeconds: 10
          #   periodSeconds: 30
          #   timeoutSeconds: 1
